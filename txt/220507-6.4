const [toDo, setToDo] = useState("")
  const [toDos, setToDos] = useState([]) //toDo들을 받기 위함
  const onChange = (event) => setToDo(event.target.value) //setToDo는 toDo의 값을 수정
  const onSubmit = (event) => {
    event.preventDefault()
    if(toDo === "") {
      return;
    }
    setToDo("")
    setToDos((currentArray) => [toDo, ...currentArray]) 
    //(currentArray) => === function(currentArray) {}
  }
  console.log(toDos)
  return <div>
    <h1>My To Dos ({toDos.length})</h1>
    <form onSubmit={onSubmit}>
      <input 
      value={toDo} 
      onChange={onChange} 
      type="text" 
      placeholder="to do list1" 
      />
      <button>Add To Do</button>
    </form>
    <hr />
    <ul>
      {toDos.map((item, index) => <li key={index}>{item}</li>)}
    </ul>
  </div>

  결과물 li가 한개씩 생성되는것처럼 보이는 이유는 당연함
  li 는 block 속성이므로 map은 그저 배열을 추가하고 있는데
  li가 block 속성이라 계속 한 개씩 생성되는 것처럼 보이는 것 뿐임

  index는 숫자속성
  index를 넣는 건 react js가 key값을 요구하기 때문에 예의상 넣어준것

  css 따로 파일 만들어서 사용할 때 기존 방식처럼 하면 작동 안함
  대쉬는 읽지 않고 camelCase로 클래스명 만들어야함
  ex)
  css:
  .myTitle { color: red; }
  react:
  <h1 className={styles.myTitle}>타이틀</h1> 